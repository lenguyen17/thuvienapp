package com.raven.swing.tablequanly.cell;

import com.raven.component.panelitems.BookCard;
import com.raven.model.dao.ChiTietSachDAO;
import com.raven.model.dao.SachDAO;
import com.raven.model.dao.TheMuonDAO;
import com.raven.model.modeldata.ChiTietSach;
import com.raven.model.modeldata.TheMuon;
import com.raven.swing.tablequanly.modeltable.ModelStaff;
import com.raven.table.TableCustom;
import com.raven.table.cell.TableCustomCell;
import com.raven.table.model.TableRowData;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.LinkedHashMap;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.SwingWorker;
import javax.swing.border.LineBorder;

/**
 *
 * @author DELL
 */
public class CellNgayTra extends TableCustomCell {

    public CellNgayTra() {
        initComponents();
        tf_id1.setBackground(new Color(0,0,0,0));
        tf_id2.setBackground(new Color(0,0,0,0));
        tf_id3.setBackground(new Color(0,0,0,0));
        tf_id4.setBackground(new Color(0,0,0,0));
        tf_id5.setBackground(new Color(0,0,0,0));
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_id1 = new javax.swing.JTextField();
        tf_id2 = new javax.swing.JTextField();
        tf_id3 = new javax.swing.JTextField();
        tf_id4 = new javax.swing.JTextField();
        tf_id5 = new javax.swing.JTextField();

        tf_id1.setEditable(false);
        tf_id1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tf_id1.setFocusable(false);
        tf_id1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_id1ActionPerformed(evt);
            }
        });

        tf_id2.setEditable(false);
        tf_id2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tf_id2.setFocusable(false);
        tf_id2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_id2ActionPerformed(evt);
            }
        });

        tf_id3.setEditable(false);
        tf_id3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tf_id3.setFocusable(false);
        tf_id3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_id3ActionPerformed(evt);
            }
        });

        tf_id4.setEditable(false);
        tf_id4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tf_id4.setFocusable(false);
        tf_id4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_id4ActionPerformed(evt);
            }
        });

        tf_id5.setEditable(false);
        tf_id5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tf_id5.setFocusable(false);
        tf_id5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_id5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tf_id1)
            .addComponent(tf_id2, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
            .addComponent(tf_id3, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
            .addComponent(tf_id4)
            .addComponent(tf_id5)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tf_id1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_id2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_id3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_id4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tf_id5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tf_id1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_id1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_id1ActionPerformed

    private void tf_id2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_id2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_id2ActionPerformed

    private void tf_id3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_id3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_id3ActionPerformed

    private void tf_id4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_id4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_id4ActionPerformed

    private void tf_id5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_id5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_id5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField tf_id1;
    private javax.swing.JTextField tf_id2;
    private javax.swing.JTextField tf_id3;
    private javax.swing.JTextField tf_id4;
    private javax.swing.JTextField tf_id5;
    // End of variables declaration//GEN-END:variables
     @Override
    public void setData(Object o) {
//        jTextField1.setText(o.toString());
    }

    @Override
    public Object getData() {
        return tf_id1.getText().trim();
    }

    @Override
    public TableCustomCell createComponentCellEditor(TableCustom tc, TableRowData trd, Object o, int i, int i1) {
        CellNgayTra ctm = new CellNgayTra();
        ctm.setData(o);
        new Thread() {
            @Override
            public void run() {
                ctm.addData(tc, i);
            }
        }.run();
        return ctm;
    }

//    @Override
//    public Component createComponentCellRender(TableCustom table, TableRowData data, int row, int column) {
//        CellIDSach cell = new CellIDSach();
////        cell.addData(table, data, row);
//        return cell;
//    }
    private void addData(TableCustom table, int row) {
        String idTM = table.getValueAt(row, 0) + "";
        LinkedHashMap<String, Calendar> mapNgayTra = TheMuonDAO.getInstance().getNgayTraByTheMuon(table.getValueAt(row, 0).toString());
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        ArrayList<Calendar> arrNT = new ArrayList<>(mapNgayTra.values());
        for (int i = 0; i < arrNT.size(); i++) {
            if (i == 0) {
                if (arrNT.get(i) != null) {
                    tf_id1.setText(sdf.format(arrNT.get(i).getTime()));
                }
            } else if (i == 1) {
                if (arrNT.get(i) != null) {
                    tf_id2.setText(sdf.format(arrNT.get(i).getTime()));
                }
            } else if (i == 2) {
                if (arrNT.get(i) != null) {
                    tf_id3.setText(sdf.format(arrNT.get(i).getTime()));
                }
            } else if (i == 3) {
                if (arrNT.get(i) != null) {
                    tf_id4.setText(sdf.format(arrNT.get(i).getTime()));
                }
            }else if (i == 4) {
                if (arrNT.get(4) != null) {
                    tf_id5.setText(sdf.format(arrNT.get(i).getTime()));
                }
            }
        }
    }

}
